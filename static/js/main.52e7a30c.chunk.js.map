{"version":3,"sources":["components/clock/Clock.tsx","App.tsx","index.tsx"],"names":["getNewDate","Date","toUTCString","slice","Clock","state","currentTime","timerID","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","timerId","updateClockName","handleContextMenu","event","preventDefault","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,IACP,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAGvC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,YAAaN,KAFjB,EAKEO,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,YAAaN,MAE7BY,QAAQC,KAAK,EAAKR,MAAMC,eACvB,OAZP,gCAeE,SAAmBQ,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WAErCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDP,KAAKQ,MAAMD,cAlBzE,kCAsBE,WACEN,OAAOS,cAAcV,KAAKD,WAvB9B,oBA0BE,WACE,IAAQQ,EAAcP,KAAKQ,MAAnBD,UACAT,EAAgBE,KAAKH,MAArBC,YAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGb,WAvCX,GAA2Bc,IAAMC,WCLjC,SAASC,IACP,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAGX,IAAMG,EAAb,4MACErB,MAAQ,CACNU,UAAW,UACXY,UAAU,GAHd,EAMEC,QAAU,EANZ,EAoBEC,gBAAkB,WAChB,EAAKlB,SAAS,CAAEI,UAAWO,OArB/B,EAwBEQ,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKrB,SAAS,CAAEgB,UAAU,KA1B9B,EA6BEM,YAAc,WACZ,EAAKtB,SAAS,CAAEgB,UAAU,KA9B9B,uDAQE,WACEnB,KAAKoB,QAAUnB,OAAOC,YAAYF,KAAKqB,gBAAiB,MACxDK,SAASC,iBAAiB,cAAe3B,KAAKsB,mBAC9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,eAX5C,kCAcE,WACExB,OAAOS,cAAcV,KAAKoB,SAC1BM,SAASE,oBAAoB,cAAe5B,KAAKsB,mBACjDI,SAASE,oBAAoB,QAAS5B,KAAKyB,eAjB/C,oBAiCE,WACE,MAAgCzB,KAAKH,MAA7BsB,EAAR,EAAQA,SAAUZ,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOZ,UAAWA,WAxCvC,GAAyBK,IAAMC,WCZ/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.52e7a30c.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string\n};\n\ntype State = {\n  currentTime: string\n};\n\nfunction getNewDate() {\n  return new Date().toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    currentTime: getNewDate(),\n  };\n\n  timerID = 0;\n\n  componentDidMount(): void {\n    this.timerID = window.setInterval(() => {\n      this.setState({ currentTime: getNewDate() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.currentTime);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerID);\n  }\n\n  render(): React.ReactNode {\n    const { clockName } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import './App.scss';\nimport React from 'react';\nimport { Clock } from './components/clock/Clock';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nfunction getRandomName() {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(this.updateClockName, 3300);\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  updateClockName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render(): React.ReactNode {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}